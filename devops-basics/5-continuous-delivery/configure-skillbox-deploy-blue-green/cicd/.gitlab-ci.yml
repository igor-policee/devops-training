---

stages:
  - build
  - deploy
  - revert

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  NGINX_CONF_MOUNTPOINT: /var/lib/docker/volumes/nginx-conf-volume/_data
  SKILLBOX_BUILD_MOUNTPOINT: /var/lib/docker/volumes/skillbox-build-volume/_data

build_image:
  stage: build
  tags:
    - docker
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind

  before_script:
    - docker login --username ${DOCKER_HUB_LOGIN} --password ${DOCKER_HUB_TOKEN}
  script:
    - docker build --tag ${CI_PROJECT_NAME}:${CI_PIPELINE_IID} --build-arg BUILD_NUMBER=${CI_PIPELINE_IID} --build-arg CI_PROJECT_NAME=${CI_PROJECT_NAME} .
    - docker tag ${CI_PROJECT_NAME}:${CI_PIPELINE_IID} ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
    - docker push ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'

deploy_production:
  stage: deploy
  tags:
    - linux
  before_script:
    - docker pull ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
  script:
    - docker run --rm --detach --name ${CI_PROJECT_NAME}-${CI_PIPELINE_IID} ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
    - sudo docker cp ${CI_PROJECT_NAME}-${CI_PIPELINE_IID}:/src/${CI_PROJECT_NAME}/build-${CI_PIPELINE_IID} ${SKILLBOX_BUILD_MOUNTPOINT}
    - sudo sh -c "cd ${SKILLBOX_BUILD_MOUNTPOINT} && rm --recursive --force html && ln --symbolic build-${CI_PIPELINE_IID} html"
  after_script:
    - docker stop ${CI_PROJECT_NAME}-${CI_PIPELINE_IID}
    - docker rmi ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'

revert:
  stage: revert
  tags:
    - linux
  before_script:
    - export REVERT_BUILD_NUMBER=$((${CI_PIPELINE_IID} - 2))
  script:
    - sudo sh -c "cd ${SKILLBOX_BUILD_MOUNTPOINT} && rm --recursive --force html && ln --symbolic build-${REVERT_BUILD_NUMBER} html"
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      when: manual