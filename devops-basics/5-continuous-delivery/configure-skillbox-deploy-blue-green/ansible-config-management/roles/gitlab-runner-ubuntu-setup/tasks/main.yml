---

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Result -> gitlab-runner
  when: "'gitlab-runner' in ansible_facts.packages"
  ansible.builtin.debug:
    msg: gitlab-runner found

- name: Result -> gitlab-runner
  when: "'gitlab-runner' not in ansible_facts.packages"
  ansible.builtin.debug:
    msg: gitlab-runner NOT found

- name: Install Gitlab Runner
  when: "'gitlab-runner' not in ansible_facts.packages"
  block: 
    - name: Install -> GitLab runner from the official repository
      ansible.builtin.shell: >-
        curl -L "https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh" | sudo bash

    - name: Install -> GitLab runner from the official repository
      ansible.builtin.apt:
        name: gitlab-runner
        state: latest
        update_cache: true
      notify:
        Start and enable service -> gitlab-runner

- name: Add user 'gitlab-runner' -> 'docker,admin' groups
  ansible.builtin.user:
    name: gitlab-runner
    groups: gitlab-runner,docker,admin

- name: "Check GitLab Runner registration (base: ubuntu, executor: shell)"
  ansible.builtin.shell: |-
    cat /etc/gitlab-runner/config.toml | egrep {{ gitlab_url }} || echo 'runner not registered'
  register: check_result

- name: "Result -> Check GitLab Runner registration (base: ubuntu, executor: shell)"
  ansible.builtin.debug:
    var: check_result['stdout']

- name: "Register GitLab Runner (base: ubuntu, executor: shell)"
  when: check_result['stdout'] == 'runner not registered'
  ansible.builtin.shell: >-
    gitlab-runner register
    --non-interactive
    --url {{ gitlab_url }}
    --registration-token {{ gitlab_reg_token }}
    --executor "shell"
    --docker-image alpine:latest
    --description "runner-linux"
    --tag-list linux
    --run-untagged=true
    --locked="false"
    --access-level="not_protected"