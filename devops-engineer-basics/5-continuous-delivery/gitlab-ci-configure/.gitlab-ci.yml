---

stages:
  - build
  - deploy

build_image:
  stage: build
  tags:
    - docker
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login --username ${DOCKER_HUB_LOGIN} --password ${DOCKER_HUB_TOKEN}
  script:
    - docker build --tag ${CI_PROJECT_NAME}:${CI_PIPELINE_IID} --build-arg BUILD_NUMBER=${CI_PIPELINE_IID} .
    - docker tag ${CI_PROJECT_NAME}:${CI_PIPELINE_IID} ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
    - docker push ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'

deploy_to_nginx:
  stage: deploy
  tags:
    - linux
  variables:
    NGINX_CONF_MOUNTPOINT: /var/lib/docker/volumes/nginx-conf-volume/_data
    SKILLBOX_BUILD_MOUNTPOINT: /var/lib/docker/volumes/skillbox-build-volume/_data

  before_script:
    - docker pull ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}

  script:
    - docker run --rm --detach --name ${CI_PROJECT_NAME}-${CI_PIPELINE_IID} ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
    - docker cp ${CI_PROJECT_NAME}-${CI_PIPELINE_IID}:/src/node-skillbox/build-${CI_PIPELINE_IID} ${SKILLBOX_BUILD_MOUNTPOINT}
  after_script:
    - docker stop ${CI_PROJECT_NAME}-${CI_PIPELINE_IID}
    - docker rmi ${DOCKER_HUB_LOGIN}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
    - docker volume prune --force
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'